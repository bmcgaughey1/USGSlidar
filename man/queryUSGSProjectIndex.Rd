% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/USGSlidar.R
\name{queryUSGSProjectIndex}
\alias{queryUSGSProjectIndex}
\title{USGS Lidar Toolkit -- Identify USGS Lidar Project Covering Area}
\usage{
queryUSGSProjectIndex(
  x,
  y,
  buffer = 0,
  shape = "square",
  aoi = NULL,
  crs = "",
  index = "",
  segments = 60,
  return = "index",
  returnType = "Spatial",
  returncrs = "same",
  lidarOnly = TRUE,
  dropNAColumns = NULL,
  clean = TRUE,
  ...
)
}
\arguments{
\item{x}{Location easting for the center of the area-of-interest.}

\item{y}{Location northing for the center of the area-of-interest.}

\item{buffer}{Distance in meters added or subtracted to \code{(x,y)}
to create the area-of-interest. Can be 0 when used with \code{(x,y)} to
return items providing coverage for point location(s). Can be a
vector of values corresponding to the number of objects in \code{aoi}
allowing a different buffer size for each object when \code{aoi} is a
\code{Spatial*} or \code{sf} object. \code{buffer} can be negative with
polygon features to reduce the area considered. However, you may end up
with weird shapes if the distance is larger than the width of the polygon.
Data in \code{(x,y)} and \code{aoi} are projected into the web mercator
coordinate reference system before the buffer operation is done so the
units for \code{buffer} are always meters. When \code{buffer = 0},
\code{aoi} is point(s), and \code{return = "index"} the return type
will be polygon(s). While this is useful to determine the lidar
projects needed to provide coverage for plots, it doesn't allow you to
maintain a set of points that are covered by one or more lidar projects.
If you want the set of points, pass the set of all points as \code{aoi},
set \code{buffer = 0}, and set \code{return = "aoi"} but realize that a
specific sample area associated with a point may actually be covered by
additional lidar projects than those that cover the point location or may
be partially outside the lidar project polygon.}

\item{shape}{Character string describing the shape of the sample area in
the case of point features or the shape applied to the buffer corners
when using polygon features. Valid values are \code{"square"} or \code{"circle"}.}

\item{aoi}{\code{Spatial*} or \code{sf} object containing a point or polygon
describing the area of interest. Can be points or polygons.}

\item{crs}{Valid \code{proj4string} string defining the coordinate
reference system of \code{(x,y)}. \code{crs} is required when using
\code{(x,y)}. This can also be a valid \code{SRS_string} for
use with the sp::CRS() function where it will be provided as the \code{projargs}
argument. \code{crs} is ignored when \code{aoi} is specified.}

\item{index}{Index file for USGS lidar projects. If not provided, an index
previously specified by a call to \code{fetchUSGSProjectIndex} or
\code{setUSGSProjectIndex} will be used. If not provided and you have
not called \code{fetchUSGSProjectIndex} or \code{setUSGSProjectIndex}, the
function displays a warning and returns.}

\item{segments}{Number of segments to use when generating a circular
area of interest. When using a \code{SpatialPoint*} or \code{sf} object
with \code{shape = "circle"}, set \code{segments} to a rather large value (60
or higher) that is a multiple of 4. The \code{gBuffer} function from
\code{rgeos} and \code{st_buffer} function from \code{sf} are used to
build the sample areas and it accepts the number of segments in a quarter
circle so small values for \code{segments} may not produce good circles.
Values for \code{segments} that are not a multiple of 4 will not
produce circles with the correct number of segments.}

\item{return}{Character string specifying the kind of shapes to be
returned. Valid values are "\code{"aoi"} to return shapes for each
object in the \code{aoi} or the object defined by \code{(x,y)} and \code{buffer}
with additional attributes providing lidar project information and
\code{"index"} (default) to return project shapes that provide coverage
for the features in the \code{"aoi"} or the area defined by \code{(x,y)}
and \code{buffer}. When project shapes are returned there is no \code{"aoi"}
information included with the project shape attributes.}

\item{returnType}{Character string specifying the object type for the
returned polygon object when \code{(x,y)} is used to specify the
area-of-interest. Valid values are \code{"Spatial"} or \code{"sf"}.
\code{returnType} is ignored when \code{aoi} is specified.}

\item{returncrs}{Valid \code{proj4string} string defining the coordinate
reference system of the returned \code{SpatialPolygonsDataFrame} or
\code{sf} object. A value of \code{"same"} will project the return object
to the same coordinate reference system as \code{aoi} or to \code{crs} when
used with \code{(x,y)}. This can also be a valid \code{SRS_string} for
use with the sp::CRS() function where it will be provided as the \code{projargs}
argument.}

\item{lidarOnly}{Boolean indicating that only lidar projects should be considered
for the spatial overlay. For the USGS WESM index, setting \code{lidarOnly = TRUE}
will include projects with the following values for the collection method:
  * linear-mode lidar
  * Bathymetric LIDAR
  * Topobathymetric LIDAR
  * Geiger-mode LIDAR
  * Single Photon LIDAR}

\item{dropNAColumns}{list of column names to test in the index for NA values.
If any values in any of the columns are NA, the feature will be dropped
from the index prior to the spatial overlay. Default is to consider all
features in the index.}

\item{clean}{Boolean to enable a cleaning operation for the project polygons
using a call to \code{gBuffer} with \code{width = 0} and \code{byid = TRUE}.
This operation can fix many, but not all, topology problems. If you see
warnings about self-intersecting rings, you may need to do some additional
cleaning on a local copy of the project index.}

\item{...}{Additional arguments passed to \code{download.file}}
}
\value{
A \code{SpatialPolygonsDataFrame} or \code{sf} object containing project
  polygon(s) and attribute(s) for lidar projects covering the specified area.
  Attributes for the \code{aoi} are placed first in the \code{data.frame}
  followed by attributes for the lidar project polygons.
}
\description{
Intersect a set of features (points or polygons) against a lidar
project index to determine which projects provide coverage for the
features. This is purely a spatial overlay operation and does not
use the attribute data associated with the index.
}
\details{
Finds all USGS lidar projects that cover the area-of-interest
  and associates the polygon attributes with those of the input object(s)
  to produce the return object.

  When used with \code{(x,y)}, a data object is created containing a single
  point. The \code{buffer} is then applied and the resulting area is
  intersected with the project polygons.

  Internally, all data are in the web mercator coordinate reference system
  (EPSG:3857). Various data objects are projected to this CRS to
  perform the intersection and then projected to desired CRS for the
  return object.
}
\examples{
\dontrun{
queryUSGSProjectIndex(-13540901, 5806426, 180, shape = "circle",
  crs = CRS(SRS_string="EPSG:3857"))
  }
}
